<?xml version="1.0"?>
<document>
  <id>2238957</id>
  <title>CFGP: a web-based, comparative fungal genomics platform
</title>
  <abstract>
 Since the completion of the Saccharomyces cerevisiae genome sequencing project in 1996, the genomes of over 80 fungal species have been sequenced or are currently being sequenced. Resulting data provide opportunities for studying and comparing fungal biology and evolution at the genome level. To support such studies, the Comparative Fungal Genomics Platform (CFGP; http://cfgp.snu.ac.kr), a web-based multifunctional informatics workbench, was developed. The CFGP comprises three layers, including the basal layer, middleware and the user interface. The data warehouse in the basal layer contains standardized genome sequences of 65 fungal species. The middleware processes queries via six analysis tools, including BLAST, ClustalW, InterProScan, SignalP 3.0, PSORT II and a newly developed tool named BLASTMatrix. The BLASTMatrix permits the identification and visualization of genes homologous to a query across multiple species. The Data-driven User Interface (DUI) of the CFGP was built on a new concept of pre-collecting data and post-executing analysis instead of the &#x2018;fill-in-the-form-and-press-SUBMIT&#x2019; user interfaces utilized by most bioinformatics sites. A tool termed Favorite, which supports the management of encapsulated sequence data and provides a personalized data repository to users, is another novel feature in the DUI.
</abstract>
  <content>
 Fungi exert a far-reaching influence on the earth's biosphere (1). As recyclers of organic matter and as symbionts of most terrestrial plants, fungi are essential components of healthy ecosystems (2). For thousands of years, humans have exploited fungi for the production of many useful compounds and foods (3). In contrast to these benefits, fungi are also a major cause of plant diseases, significantly reducing crop yield (4). Fungi also represent a direct threat to human health as the most common cause of death in immunocompromised patients such as bone marrow transplant recipients and individuals suffering from advanced HIV infection due to systemic mycoses (5,6). List of genome sequences stored in the data warehouse of the CFGP aSGTC, Stanford Genome Technology Center; SI, Sanger Institute; CBS, Center For Biological Sequences; BI, Broad Institute; WGSC, Washington Univ. Genome Sequencing Center; JGI, DOE Joint Genomic Institute; DOGAN, Database Of the Genomes Analyzed at Nite; IGM, Institut&#xE9; de G&#xE9;n&#xE9;tique et Microbiologie; TAIR, The Arabidopsis Information Resource; IRGSP, International Rice Genome Sequencing Project; BDGP, Berkeley Drosophila Genome Project; BGI, Beijing Genome Institute; VGI, Virginia Bioinformatics Institute; JBPC, Josephine Bay Paul Center for Comparative Molecular Biology and Evolution; MTGSP, Medicago Truncatula Genome Sequencing Project. bTaxonomy based on (66). cTaxonomy based on (67). dTaxonomy based on (12). eIncomplete coverage of genome information. eIncomplete coverage of genome information. The abundance of sequenced species has facilitated in-depth comparative evolutionary genomic analyses across multiple fungal taxa (17&#x2013;20). Because of the large amount of data involved, a cohesive, user-friendly informatics platform that links data and analysis tools is needed to efficiently support such analyses. Despite this need, the lack of data standardization has hampered the development of such platforms. The Genome Information Management System (GIMS) provided an integrated environment for archiving and visualization of genome sequences and data on transcriptome, protein&#x2013;protein interaction, Gene Ontology (GO) and metabolic pathway (21). The &#x2018;eFungi&#x2019;, an improvement from the GIMS, stores genome sequences of 34 fungal and 2 Oomycete species (http://www.e-fungi.org.uk/). Although these systems systematically archive genomic data from multiple species, they do not support analysis of archived data with bioinformatic tools. Heterogeneity of user interface (UI) and input/output data format in different bioinformatics tools has also complicated the integration of tools in a single platform to support multifaceted analyses of multiple genome sequences. Several systems provide multiple tools via a single platform. One example is the SNAP workbench, which supports sophisticated phylogenetic analyses through a menu-driven design (22). The iNquiry (BioTeam Inc., Wayland, MA, USA; http://web.bioteam.net/metadot/index.pl?id=2187) and European Molecular Biology Open Software Suite (EMBOSS) (23) are other examples of integrated, web-based platforms with multiple bioinformatic tools. The PLATCOM integrates a number of tools for comparative analysis of multiple genomes (24,25). These platforms, integrating data and tools, significantly shorten data analysis time by eliminating the need for visiting multiple, independent web sites to collect and analyse data. The ISYS platform utilizes middleware to link many different databases to data analysis tools using JAVA and allow these tools to communicate without any modification (26). Although these examples illustrate major improvements in supporting integrative analyses of genome sequence data via a single platform, the efficiency and expandability of such platforms require continuous enhancement, in order to adequately support utilization of rapidly increasing genome sequence data. Another area that requires improvement is the UI. Many currently available web-based bioinformatic platforms employ classical UI systems that simply display a list of functions or databases and provide a &#x2018;paste-sequence-and-press-submit&#x2019; form (http://ausweb.scu.edu.au/aw02/papers/refereed/fitch/paper.html). Such UIs are easy to construct, but are not suitable for successively analysing sequence data with multiple tools. To provide an effective means for analysing fungal genome sequence data through a suite of tools across multiple species, we developed the Comparative Fungal Genomics Platform (CFGP), which consists of a large-scale genomic data warehouse, bioinformatics tools useful for comparative genome analyses and a novel UI. The UI of the CFGP provides an easy access to sequence data stored in the data warehouse and seamlessly supports integrative data analyses using multiple tools. The data warehouse currently houses 101 genome databases in a standardized format for rapid data exchange. Bioinformatic tools incorporated into the CFGP were wrapped by a middleware program to efficiently manage tasks and facilitate data exchange between tools. Overall system architecture and data flow in the CFGP. The basal layer contains a data warehouse, Favorite (a personal data repository and management tool), and external databases, such as InterPro and GO, stored in the CFGP. The wrapper in the middle layer relays requests from the UI to both the internal and external programs. The task manager at the right side of the wrapper manages tasks by assigning them to servers. At the upper layer, the DUI, a template engine developed with PHP, operates. A &#x2018;command&#x2019; from the user goes to the middle layer. The basal layer passes the data to the middle layer as &#x2018;input&#x2019;. At the middle layer, chosen programs generate results and pass them to the upper layer for &#x2018;representation&#x2019; and to the basal layer for &#x2018;storage&#x2019;. Overall system architecture and data flow in the CFGP. The basal layer contains a data warehouse, Favorite (a personal data repository and management tool), and external databases, such as InterPro and GO, stored in the CFGP. The wrapper in the middle layer relays requests from the UI to both the internal and external programs. The task manager at the right side of the wrapper manages tasks by assigning them to servers. At the upper layer, the DUI, a template engine developed with PHP, operates. A &#x2018;command&#x2019; from the user goes to the middle layer. The basal layer passes the data to the middle layer as &#x2018;input&#x2019;. At the middle layer, chosen programs generate results and pass them to the upper layer for &#x2018;representation&#x2019; and to the basal layer for &#x2018;storage&#x2019;. The three layers of the CFGP can be manipulated and developed independently, which provides an optimal environment for maintenance and expansion of the CFGP. This was made possible by employing a standardized scheme in building each layer. In the basal layer, functions and schema of databases were standardized in both naming rules and basic structure of programming style, which enhances the efficiency of database development. In the middle layer, communications between the CFGP and external programs were standardized via PERL modules. This facilitates the future expansion of functionality, because new programs can be easily incorporated into the CFGP by constructing additional PERL modules. In the DUI, most of the interface components were standardized as a function so that a developer can easily make a new UI with selected components. Fungal genome sequence data in the public domain are stored in heterogeneous formats, posing a hurdle in integrating the data for comparative analysis. We retrieved these data and stored all Open Reading Frame (ORF) and contig (or chromosome) sequences of individual genomes in the data warehouse of the CFGP in a single format using MySQL. Subsequently, all sequence data were encapsulated as individual objects so that they can be easily analysed through multiple data analysis tools. The data warehouse currently houses the genome sequences of 65 fungal species, 4 Oomycete species and 27 non-fungal organisms (Table 1). The fungal genome databases cover 52 species belonging to the Ascomycota, eight species in the Basidomycota, two species each in the Mucoromycotina and the Microsprodia and one in the Chytridiomycota (12). Most of the bioinformatics tools currently available through the web typically provide a box in the UI for pasting a query sequence. However, as the complexity of scientific inquires increases, often requiring multiple analyses with a single query, a single analysis with multiple sequences, or a combination of both, this type of UI becomes inefficient, and a new UI design is required (32). The only current solution for analysing a large number of sequences is a batch processing of data, which likely requires some level of programming knowledge by the user. Structure of DUI. (A) A screenshot shows the process of data acquisition from Contig Browser. On the left side, &#x2018;Data Frame&#x2019; displays the list of Magnaporthe oryzae proteins and &#x2018;Manipulation Frame&#x2019; on the right side shows a list of Favorite. The &#x2018;Collection arrow&#x2019; in the middle transfers chosen sequences from the Data Frame to the Manipulation Frame. (B) Collected sequences can be analysed by data analysis tools in Favorite. Users can choose sequences by clicking the checkbox in front of each sequence. (C) A BLAST search output is shown with Favorite in the Manipulation Frame. From the BLAST result, users can transfer sequences to Favorite via the use of the &#x2018;Collection Arrow&#x2019;. Structure of DUI. (A) A screenshot shows the process of data acquisition from Contig Browser. On the left side, &#x2018;Data Frame&#x2019; displays the list of Magnaporthe oryzae proteins and &#x2018;Manipulation Frame&#x2019; on the right side shows a list of Favorite. The &#x2018;Collection arrow&#x2019; in the middle transfers chosen sequences from the Data Frame to the Manipulation Frame. (B) Collected sequences can be analysed by data analysis tools in Favorite. Users can choose sequences by clicking the checkbox in front of each sequence. (C) A BLAST search output is shown with Favorite in the Manipulation Frame. From the BLAST result, users can transfer sequences to Favorite via the use of the &#x2018;Collection Arrow&#x2019;. A new UI tool named Favorite was developed to provide a personalized hub for storing and managing sequences retrieved from the data warehouse (Figure 2B). By storing only the primary keys of chosen sequences, not the sequences themselves, Favorite significantly reduces the space needed for storing data. Data stored in Favorite can be analysed with one tool or a series of tools by simply clicking the appropriate analyses in the option window (Figure 2C). Five external programs, including BLAST, ClustalW, InterProScan, SignalP 3.0 and PSORT II, are available in Favorite. A BLAST search result can be presented in six different formats. One of them is &#x2018;interpro view&#x2019;, which displays the BLAST result annotated by InterPro to provide the functional prediction of the proteins in the BLAST output. The ClustalW provides three different output formats: the multiple sequence alignment, distance matrix and the bootstrapped phylogenetic tree. The MSA viewer and Phyloviewer aid the user in manipulating the results of multiple sequence alignments and phylogenetic trees, respectively (http://phyloviewer.riceblast.snu.ac.kr; J. Park et al., unpublished data). Results from InterProScan, SignalP and PSORT II are stored in the annotation database so that all results can be displayed in the annotation page of each query sequence. All analysis outputs provide an option of storing any sequences in the output into Favorite, offering an easy way to collect selected sequences for subsequent analyses. To empower the personalized use of Favorite, user authentication is required. Besides supporting the management of individual users&#x2019; data, Favorite can also be used to exchange data with other researchers. In addition, Favorite retains the user's original reference data, which overcomes any discrepancies between analyses conducted at different time points due to the frequent updating of external databases, such as the NR database in NCBI. Format of BLASTMatrix output. An example of BLASTMatirx output generated using the aflatoxin gene cluster in Aspergillus nidulans as queries. The results are presented in a matrix format (A) and a distribution based on e-value (B). Additionally, BLASTMatrix analyses the pattern of conservation in the BLASTMatrix dataset (such as novel gene, &#x2018;highly conserved gene&#x2019; or &#x2018;taxon-specific gene&#x2019;) based on the distribution pattern of matched genes in all screened taxa. Format of BLASTMatrix output. An example of BLASTMatirx output generated using the aflatoxin gene cluster in Aspergillus nidulans as queries. The results are presented in a matrix format (A) and a distribution based on e-value (B). Additionally, BLASTMatrix analyses the pattern of conservation in the BLASTMatrix dataset (such as novel gene, &#x2018;highly conserved gene&#x2019; or &#x2018;taxon-specific gene&#x2019;) based on the distribution pattern of matched genes in all screened taxa. Genome sequences, along with associated functional genomics data, will continue to accumulate at an exponential rate. To efficiently utilize this inflow of data, standardization of data and efficient communication among data analysis tools are required. Enhancing the standard of communication between programs will also help future expansion by integrating more bioinformatics tools and will provide a development environment for open source projects. Additional genomic information, such as alternative splicing and expression data derived from EST, SAGE and microarray experiments, can be added to the CFGP.
</content>
</document>
